#summary Goals and philosophy
#labels Featured

=Introduction=

There are many libraries for computer graphics, some pure raster based and some vector based. Each developer that want to create an application with user interface or visualization must choose set of libraries that will be used to do the job. Today's computers are so powerful and difference between slow and fast code is day by day smaller. This is reason why some libraries are terrible slow and there is nobody working on optimizations if it's really not necessary.

Fog-Framework is different. When library was in designing state the main and most important requirement was performance, integration and easy-of-use API. This is reason why Fog-Framework contains many classes not strictly related to computer graphics.

=Design Notes=

 * Library depends only to libraries that are installed on target operating system by default.
   * Under Windows only WinAPI is used (other libraries like libpng can be used too, but you must first install them).
   * Under Linux/BSD/MAC only freetype2, libjpeg and libpng libraries are needed (and libjpeg and libpng support can be disabled). By default Fog also tries to use fontconfig.
 * Library is not using C++ stl library.
 * Library is compiled without rtti (no dynamic casts) and without exceptions.
 * Design of library allows any time to replace specific parts (vector engine, raster engines, blitters, effects, etc...)
 * Use modern CPU features (MMX, SSE2). Currently Fog library contains strong SSE2 optimizations and tricks to draw things faster.
 * Multithreading - This was key feature when designing the library. Fog painter is designed to be able to use threads for rasterization and blitting pipelines. Currently the design is not complete, but the thread management is very good and results are very promising
 * API should be easy-to-use, but powerful.
 * Do not depend to X11 under Linux/BSD.

=Libraries=

Fog-Framework currently contains these libraries:

  * Fog/Core - Platform abstraction library.
  * Fog/Graphics - 2d graphics API.
  * Fog/UI - Platform independent UI toolkit.
  * Fog/Svg - SVG DOM, parser and renderer.
  * Fog/Xml - XML DOM, parser and writer.

Because Fog-Framework is not pure graphics library and it contains platform specific code and code not related to graphics at all, there is also requirement that it can't depend to X11 (this is solved by UI/X11 plugin). This enables to use Fog-Framework as server-side rendering engine.

=Maturity / Stability=

Fog-Framework is currently not mature library, but last few months huge amount of work was done. Currently there is only one person actively working on Fog-Framework, so it's hard to say when there will be first real version.

=License=

Fog-Framework is distributed under MIT license. This means that any project can use Fog source code and you can for example create your graphics library based on Fog. This means that Fog-Framework is not only ideal for open-source projects, but it's also ideal for commercial products (there are no licensing issues).

=Help wanted=

Currently I'm only developer of Fog-Framework. I'm working hard on this library and my dream is to release stable, full-featured version without TODO items in list. If you feel that you can help me with this work, please let me know.